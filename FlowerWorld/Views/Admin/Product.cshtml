@model  FlowerWorld.Models.ProductViewModel
@using FlowerWorld.Infrastructure

@{
    ViewBag.Title = "Управление продуктами";
}

@Scripts.Render("~/Scripts/jquery.unobtrusive-ajax.min.js")


<h2>Продукция</h2>

<div class="row">
    <div class="col-sm-12 col-lg-12 col-md-12">
        <div class="row">
            <div class="col-sm-6 text-left">
                @using (Html.BeginForm("Product", "Admin"))
                {
                    <div class="row form-group">
                        <div class="col-sm-5 col-md-5 col-lg-5">
                            @Html.LabelFor(x => x.SelectListCategory)
                            @Html.DropDownListFor(x => x.CategoryId, Model.SelectListCategory, new { @class = "form-control" })
                            <button type="submit" class="btn btn-default">Фильтровать</button>
                        </div>
                    </div>
                }
            </div>
            <div class="col-sm-6 text-right">
                <i class="fa fa-plus-circle"></i>
                @Html.ActionLink("Добавить", "CreateProduct", "Admin", null, new { @class = "user-add" })
            </div>
        </div>

        <table class="table table-bordered">
            <thead>
                <tr>
                    <td>Изображение</td>
                    <td>Наименование</td>
                    <td>Цена</td>
                    <td>Описание</td>
                    <td>Действия</td>
                </tr>
            </thead>
            <tbody>
                @if (@Model.CountCheck())
                {
                    <tr><td colspan="5" class="text-center">Товары отсутствуют</td></tr>
                }
                else
                {
                    foreach (var item in Model.ProductList)
                    {
                        <tr>
                            <td>
                                <img src="@Url.Content(@item.smallPath)" alt="" />
                            </td>
                            <td>@item.ProductName</td>
                            <td>@item.Price</td>
                            <td>@item.Description</td>
                            <td>
                                @Html.ActionLink(" ", "EditProduct", "Admin", new { id = @item.Id }, new { @class = "fa fa-pencil-square-o" })
                                @Html.ActionLink(" ", "DeleteProduct", "Admin", new { @id = @item.Id }, new { @class = "fa fa-times" })
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>
    <div class="btn-group">
        @Html.PageLinks(Model.PageInfo, x => Url.Action("Product", new { page = x,categoryId=Model.CurrentFilter}))
    </div>

</div>
